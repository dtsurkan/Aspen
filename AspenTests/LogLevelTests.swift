import XCTest
@testable import Aspen

class LogLevelTests: XCTestCase
{
    override func setUp()
    {
        super.setUp()
    }
    
    override func tearDown()
    {
        super.tearDown()
    }
    
    func testInitNewLevel()
    {
        
        let level = DefaultLogLevel.Verbose
        let name = "Test Level"
        let label = "TESTLABEL"
        
        let newLevel = LogLevel(level: level, name: name, label: label)
        
        XCTAssertEqual(newLevel.level, level)
        XCTAssertEqual(newLevel.name, name)
        XCTAssertEqual(newLevel.label, label)
    }
    
    func testStaticLogLevels()
    {
        let verbose = LogLevel.VERBOSE_LEVEL
        XCTAssertEqual(verbose.level, DefaultLogLevel.Verbose)
        
        let info = LogLevel.INFO_LEVEL
        XCTAssertEqual(info.level, DefaultLogLevel.Info)
        
        let warning = LogLevel.WARNING_LEVEL
        XCTAssertEqual(warning.level, DefaultLogLevel.Warning)
        
        let error = LogLevel.ERROR_LEVEL
        XCTAssertEqual(error.level, DefaultLogLevel.Error)
    }
    
    func testFetchingDefaultLevels()
    {
        let verbose = LogLevel.getLevel(.Verbose)
        XCTAssertEqual(verbose, LogLevel.VERBOSE_LEVEL)
        
        let info = LogLevel.getLevel(.Info)
        XCTAssertEqual(info, LogLevel.INFO_LEVEL)
        
        let warning = LogLevel.getLevel(.Warning)
        XCTAssertEqual(warning, LogLevel.WARNING_LEVEL)
        
        let error = LogLevel.getLevel(.Error)
        XCTAssertEqual(error, LogLevel.ERROR_LEVEL)
        
    }
    
    func testGettingEmojiIdentifiers()
    {
        let verbose = LogLevel.VERBOSE_LEVEL
        XCTAssertEqual(verbose.emojiIdentifier(), "üöß")
        
        let info = LogLevel.INFO_LEVEL
        XCTAssertEqual(info.emojiIdentifier(), "‚òùÔ∏è")
        
        let warning = LogLevel.WARNING_LEVEL
        XCTAssertEqual(warning.emojiIdentifier(), "‚ö†Ô∏è")
        
        let error = LogLevel.ERROR_LEVEL
        XCTAssertEqual(error.emojiIdentifier(), "üö®")
    }
}
